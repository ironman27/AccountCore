// <auto-generated />
using System;
using AccountCore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountCore.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191016133457_add_Employee_Manager_Timelog_Person_tables")]
    partial class add_Employee_Manager_Timelog_Person_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccountCore.DAL.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<int>("SalaryPerHour");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("AccountCore.DAL.Models.TimeLog", b =>
                {
                    b.Property<int>("TimeLogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("Hours");

                    b.Property<int?>("ManagerPersonId");

                    b.HasKey("TimeLogId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ManagerPersonId");

                    b.ToTable("TimeLogs");
                });

            modelBuilder.Entity("AccountCore.DAL.Models.Employee", b =>
                {
                    b.HasBaseType("AccountCore.DAL.Models.Person");

                    b.Property<int?>("ManagerId")
                        .IsRequired();

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            PersonId = 11,
                            Name = "Sam",
                            SalaryPerHour = 10,
                            ManagerId = 1
                        },
                        new
                        {
                            PersonId = 12,
                            Name = "Dan",
                            SalaryPerHour = 11,
                            ManagerId = 1
                        },
                        new
                        {
                            PersonId = 21,
                            Name = "Ken",
                            SalaryPerHour = 9,
                            ManagerId = 2
                        },
                        new
                        {
                            PersonId = 22,
                            Name = "Ban",
                            SalaryPerHour = 8,
                            ManagerId = 2
                        },
                        new
                        {
                            PersonId = 23,
                            Name = "Ted",
                            SalaryPerHour = 7,
                            ManagerId = 2
                        });
                });

            modelBuilder.Entity("AccountCore.DAL.Models.Manager", b =>
                {
                    b.HasBaseType("AccountCore.DAL.Models.Person");

                    b.ToTable("Managers");

                    b.HasDiscriminator().HasValue("Manager");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Tom",
                            SalaryPerHour = 15
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Fred",
                            SalaryPerHour = 15
                        });
                });

            modelBuilder.Entity("AccountCore.DAL.Models.TimeLog", b =>
                {
                    b.HasOne("AccountCore.DAL.Models.Employee", "Employee")
                        .WithMany("TimeLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AccountCore.DAL.Models.Manager")
                        .WithMany("TimeLogs")
                        .HasForeignKey("ManagerPersonId");
                });

            modelBuilder.Entity("AccountCore.DAL.Models.Employee", b =>
                {
                    b.HasOne("AccountCore.DAL.Models.Manager", "Manager")
                        .WithMany("Employees")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
